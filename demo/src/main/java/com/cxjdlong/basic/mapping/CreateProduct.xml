<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cxjdlong.basic.dao.ProductDao">


	<delete id="delectByID" parameterType="String">
		delete from createproduct where id in (${id})
	</delete>

	<update id="updateByID" parameterType="com.cxjdlong.basic.model.CreateProduct">
		update createproduct set seoKeyword=#{seoKeyword},seoDescription=#{seoDescription},productName=#{productName},proCaption=#{proCaption},proClassId=#{proClassId},isRecommend=#{isRecommend},proImg=#{proImg},proContent=#{proContent},author=#{author},updateTimes=now(),looknum=#{looknum},proOrderNum=#{proOrderNum}
	    where id=#{id}
	</update>
	
	<insert id="add" parameterType="com.cxjdlong.basic.model.Createnews">
		insert into createproduct (seoKeyword,seoDescription,productName,proCaption,proClassId,isRecommend,proImg,proContent,author,addTimes,looknum,proOrderNum) values (#{seoKeyword},#{seoDescription},#{productName},#{proCaption},#{proClassId},#{isRecommend},#{proImg},#{proContent},#{author},now(),#{looknum},#{proOrderNum})
	</insert>
	
	<resultMap type="com.cxjdlong.basic.model.CreateProduct" id="prosMap" autoMapping="true">
		<id column="id" property="id"/>	
		<association property="protype" javaType="com.cxjdlong.basic.model.Createprotype">
			<id column="proClassId" property="id"/>
			<result column="className" property="className"/>
		</association>
	</resultMap>
	<select id="getFind" resultMap="prosMap" parameterType="Map">
		SELECT * from createproduct t1 LEFT JOIN createprotype t2 on (t1.proClassId=t2.id) ORDER BY t1.isRecommend desc,t1.proOrderNum DESC limit ${offset},${size}
	</select>
	
	<select id="selectByID" resultMap="prosMap" parameterType="int">
		SELECT * from createproduct t1 LEFT JOIN createprotype t2 on (t1.proClassId=t2.id) where t1.id=#{id} 
	</select>

	
	<select id="getFindTotal" resultType="int">
		select count(id) from createproduct 
	</select>
	
	<select id="selectFun" resultMap="prosMap" parameterType="String" >
		SELECT * from createproduct t1 LEFT JOIN createprotype t2 on (t1.proClassId=t2.id) where t1.productName like #{selKey} or t1.proContent like #{selKey}
	</select> 
</mapper>